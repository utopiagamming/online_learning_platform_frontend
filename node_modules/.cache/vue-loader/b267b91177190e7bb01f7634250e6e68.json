{"remainingRequest":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-simple-uploader\\src\\components\\drop.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-simple-uploader\\src\\components\\drop.vue","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  import { uploaderMixin, supportMixin } from '../common/mixins'\n\n  const COMPONENT_NAME = 'uploader-drop'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [uploaderMixin, supportMixin],\n    data () {\n      return {\n        dropClass: ''\n      }\n    },\n    methods: {\n      onDragEnter () {\n        this.dropClass = 'uploader-dragover'\n      },\n      onDragLeave () {\n        this.dropClass = ''\n      },\n      onDrop () {\n        this.dropClass = 'uploader-droped'\n      }\n    },\n    mounted () {\n      this.$nextTick(() => {\n        const dropEle = this.$refs.drop\n        const uploader = this.uploader.uploader\n        uploader.assignDrop(dropEle)\n        uploader.on('dragenter', this.onDragEnter)\n        uploader.on('dragleave', this.onDragLeave)\n        uploader.on('drop', this.onDrop)\n      })\n    },\n    beforeDestroy () {\n      const dropEle = this.$refs.drop\n      const uploader = this.uploader.uploader\n      uploader.off('dragenter', this.onDragEnter)\n      uploader.off('dragleave', this.onDragLeave)\n      uploader.off('drop', this.onDrop)\n      uploader.unAssignDrop(dropEle)\n    }\n  }\n",{"version":3,"sources":["drop.vue"],"names":[],"mappings":";AAOA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"drop.vue","sourceRoot":"node_modules/vue-simple-uploader/src/components","sourcesContent":["<template>\n  <div class=\"uploader-drop\" :class=\"dropClass\" ref=\"drop\" v-show=\"support\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\n  import { uploaderMixin, supportMixin } from '../common/mixins'\n\n  const COMPONENT_NAME = 'uploader-drop'\n\n  export default {\n    name: COMPONENT_NAME,\n    mixins: [uploaderMixin, supportMixin],\n    data () {\n      return {\n        dropClass: ''\n      }\n    },\n    methods: {\n      onDragEnter () {\n        this.dropClass = 'uploader-dragover'\n      },\n      onDragLeave () {\n        this.dropClass = ''\n      },\n      onDrop () {\n        this.dropClass = 'uploader-droped'\n      }\n    },\n    mounted () {\n      this.$nextTick(() => {\n        const dropEle = this.$refs.drop\n        const uploader = this.uploader.uploader\n        uploader.assignDrop(dropEle)\n        uploader.on('dragenter', this.onDragEnter)\n        uploader.on('dragleave', this.onDragLeave)\n        uploader.on('drop', this.onDrop)\n      })\n    },\n    beforeDestroy () {\n      const dropEle = this.$refs.drop\n      const uploader = this.uploader.uploader\n      uploader.off('dragenter', this.onDragEnter)\n      uploader.off('dragleave', this.onDragLeave)\n      uploader.off('drop', this.onDrop)\n      uploader.unAssignDrop(dropEle)\n    }\n  }\n</script>\n\n<style>\n  .uploader-drop {\n    position: relative;\n    padding: 10px;\n    overflow: hidden;\n    border: 1px dashed #ccc;\n    background-color: #f5f5f5;\n  }\n  .uploader-dragover {\n    border-color: #999;\n    background-color: #f7f7f7;\n  }\n</style>\n"]}]}