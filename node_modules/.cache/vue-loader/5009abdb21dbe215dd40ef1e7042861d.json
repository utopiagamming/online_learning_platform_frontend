{"remainingRequest":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\projectCodes\\automatic-test-paper\\src\\components\\page\\Login.vue?vue&type=style&index=0&id=3a8bfd4e&scoped=true&lang=css&","dependencies":[{"path":"D:\\working\\projectCodes\\automatic-test-paper\\src\\components\\page\\Login.vue","mtime":1675844510710},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.login-wrap {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-image: url(../../assets/img/123.jpg);\n    background-size: 100%;\n}\n\n.ms-title {\n    width: 100%;\n    line-height: 50px;\n    text-align: center;\n    font-size: 20px;\n    color: #fff;\n    border-bottom: 1px solid #ddd;\n}\n\n.ms-login {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 350px;\n    margin: -190px 0 0 -175px;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.3);\n    overflow: hidden;\n}\n\n.ms-content {\n    padding: 30px 30px;\n}\n\n.login-btn {\n    text-align: center;\n}\n\n.login-btn button {\n    width: 100%;\n    height: 36px;\n    margin-bottom: 10px;\n}\n\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAgQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div class=\"login-wrap\">\n      <!--登录框-->\n        <div class=\"ms-login\">\n            <div class=\"ms-title\">网上考试系统</div>\n            <el-form :model=\"param\" :rules=\"rules\" ref=\"login\" label-width=\"0px\" class=\"ms-content\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"param.userId\" placeholder=\"username\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-people\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input\n                            type=\"password\"\n                            placeholder=\"password\"\n                            v-model=\"param.password\"\n                            @keyup.enter.native=\"submitForm()\"\n                    >\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-lock\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" plain @click=\"submitForm()\">登录</el-button>\n                </div>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" plain @click=\"dialogFormVisible = true\">注册</el-button>\n                </div>\n            </el-form>\n        </div>\n\n      <!--注册框-->\n        <el-dialog title=\"用户注册\" :visible.sync=\"dialogFormVisible\" center width=\"20%\" :destroy-on-close=\"true\">\n            <el-form :model=\"form\" :rules=\"rules1\" ref=\"form\">\n                <el-form-item label=\"用户名：\" label-width=\"100px\" prop=\"userName\">\n                    <el-input v-model=\"form.userName\" :label-width=\"formLabelWidth\" placeholder=\"姓名\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录账号：\" label-width=\"100px\" prop=\"userId\">\n                    <el-input v-model=\"form.userId\" :label-width=\"formLabelWidth\" placeholder=\"学号或者教师号\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录密码：\" label-width=\"100px\" prop=\"password\">\n                    <el-input type=\"password\" v-model=\"form.password\" :label-width=\"formLabelWidth\" placeholder=\"密码\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"确认密码：\" label-width=\"100px\" prop=\"confirmPassword\">\n                    <el-input type=\"password\" v-model=\"form.confirmPassword\" :label-width=\"formLabelWidth\"\n                              placeholder=\"确认密码\" style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"角色：\" label-width=\"100px\" prop=\"typeId\" >\n                    <el-select v-model=\"form.typeId\" placeholder=\"请选择角色\" :label-width=\"formLabelWidth\"\n                               style=\"width: 200px\" @change=\"selectType\">\n                        <el-option label=\"学生\" :value=0></el-option>\n                        <el-option label=\"老师\" :value=1></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"班级：\" label-width=\"100px\" prop=\"classId\" v-show=\"this.status===0\">\n                    <el-select v-model=\"form.classId\" placeholder=\"请选择班级\" :label-width=\"formLabelWidth\"\n                               style=\"width: 200px\">\n                        <el-option\n                                v-for=\"(item,index) in this.classList\"\n                                :label=\"item.className\"\n                                :value=\"item.classId\"\n                                :key=\"index\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"resetForm('form')\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"registerForm('form')\">注 册</el-button>\n            </div>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import {mapMutations} from 'vuex';\n    export default {\n        data: function () {\n            return {\n                classList:[],\n                status:1,\n                param: {\n                    userId: '',\n                    password: '',\n                },\n                dialogFormVisible: false,\n                rules: {\n                    userId: [{required: true, message: '请输入用户名', trigger: 'blur'}],\n                    password: [{required: true, message: '请输入密码', trigger: 'blur'}],\n                },\n                rules1: {\n                    userName: [{required: true, message: '请输入用户名', trigger: 'blur'}],\n                    password: [{required: true, message: '请输入密码', trigger: 'blur'},\n                        {min: 6, max: 8, message: '长度在 6 到 8 个字符', trigger: 'blur'}\n                    ],\n\n                    userId: [{required: true, message: '请输入用户id', trigger: 'blur'}],\n                    confirmPassword: [{required: true, message: '请再次输入密码', trigger: 'blur'},\n                        {min: 6, max: 8, message: '长度在 6 到 8 个字符', trigger: 'blur'}],\n                    typeId: [{required: true, message: '请选择角色', trigger: 'change'}],\n                },\n                form: {\n                    userName: '',\n                    userId: '',\n                    password: '',\n                    delivery: false,\n                    confirmPassword: '',\n                    typeId: '',\n                    classId:'',\n                },\n                formLabelWidth: '100px'\n\n            };\n        },\n        methods: {\n            ...mapMutations(['storeLogin']),\n            selectType(event){\n                console.log(event)\n                this.status=event;\n            },\n            registerForm(form) {\n                this.$refs[form].validate((valid) => {\n                    if (valid) {\n                        let params = {\n                            userId: this.form.userId,\n                            password: this.form.password,\n                            typeId: this.form.typeId,\n                            userName: this.form.userName,\n                            confirmPassword: this.form.confirmPassword,\n                            classId:this.form.classId\n                        }\n                        if (this.form.password !== this.form.confirmPassword) {\n                            this.$message({message: \"密码不一致\", type: 'error'});\n                            return;\n                        }\n                        axios.post('/zj/login/registerLogin.htm', params)\n                            .then(response => {\n                                if (response.data.code == \"0000\") {\n                                    this.$message({message: \"注册成功\", type: 'success'});\n                                    this.$refs[form].resetFields();\n                                    this.dialogFormVisible = false;\n                                } else {\n                                    this.$message({message: \"注册出错\", type: 'error'});\n                                    // return false;\n                                }\n                            });\n                    }\n                });\n            },\n            resetForm(form) {\n                this.$refs[form].resetFields();\n                this.dialogFormVisible = false;\n            },\n            submitForm() {\n                this.$refs.login.validate(valid => {\n                    if (valid) {\n                        let params = {\n                            userId: this.param.userId,\n                            password: this.param.password\n                        }\n                        axios.post('/zj/login/login.htm', params)\n                            .then(response => {\n                                if (response.data.code == \"0000\") {\n                                    //生成uuid作为token\n                                    const uuidv5 = require('uuid/v5');\n                                    const token = uuidv5('zj', uuidv5.DNS);\n                                    // 登陆成功 假设这里是后台返回的 token\n                                    localStorage.setItem('token', response.data.result.token)\n                                    sessionStorage.setItem('token', response.data.result.token)\n                                    this.$message.success('登录成功');\n                                    sessionStorage.setItem('role', JSON.stringify(response.data.result.role));\n                                    sessionStorage.setItem('ms_username', response.data.result.userName);\n                                    sessionStorage.setItem('uid', response.data.result.uid);\n                                    sessionStorage.setItem('userId', response.data.result.userId);\n                                    var user = this.param.userName;\n                                    this.userToken = response.data.result.token;  //拿到返回数据里的token\n                                    this.storeLogin({Authorization: this.userToken});\n                                    this.$router.push('/')\n                                } else {\n                                    this.$message({message: response.data.description, type: 'error'});\n                                }\n                            })\n                            .catch(error => {\n                                console.log(error)\n                                this.$message({message: \"登录出错\", type: 'error'});\n                            });\n                    } else {\n                        this.$message.error('请输入账号和密码');\n                        return false;\n                    }\n                });\n            },\n        },\n        created() {\n            this.axios\n                .post('/zj/class/queryList.htm')\n                .then(\n                    function (response) {\n                        this.classList = response.data.result;\n                    }.bind(this)\n                )\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    };\n</script>\n\n<style scoped>\n    .login-wrap {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        background-image: url(../../assets/img/123.jpg);\n        background-size: 100%;\n    }\n\n    .ms-title {\n        width: 100%;\n        line-height: 50px;\n        text-align: center;\n        font-size: 20px;\n        color: #fff;\n        border-bottom: 1px solid #ddd;\n    }\n\n    .ms-login {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: 350px;\n        margin: -190px 0 0 -175px;\n        border-radius: 5px;\n        background: rgba(255, 255, 255, 0.3);\n        overflow: hidden;\n    }\n\n    .ms-content {\n        padding: 30px 30px;\n    }\n\n    .login-btn {\n        text-align: center;\n    }\n\n    .login-btn button {\n        width: 100%;\n        height: 36px;\n        margin-bottom: 10px;\n    }\n\n</style>"]}]}