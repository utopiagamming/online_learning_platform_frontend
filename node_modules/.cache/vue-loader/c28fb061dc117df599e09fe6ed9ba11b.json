{"remainingRequest":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/common/chapTree.vue?vue&type=style&index=0&id=4819d054&scoped=true&lang=css&","dependencies":[{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/common/chapTree.vue","mtime":1684219082044},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.wholeBox{\r\n  width: 230px;\r\n}\r\n\r\n",{"version":3,"sources":["chapTree.vue"],"names":[],"mappings":";AAyIA;AACA;AACA","file":"chapTree.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n  <div class=\"wholeBox\">\r\n    <div class=\"treeName\">\r\n      <h3>课程章节目录</h3>\r\n    </div>\r\n\r\n    <div class=\"chapTree\">\r\n      <el-tree :data=\"computerComposition\"\r\n               @node-click=\"handleNodeClick\">\r\n      </el-tree>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"chapTree\",\r\n  data(){\r\n    return{\r\n      // sectionId:111,\r\n      parentData:{\r\n        sectionId:12111,\r\n      },\r\n      computerComposition:[\r\n        {\r\n          id:11,\r\n          label: \"计算机系统概述\",\r\n          children:[\r\n            {id:111, label: \"计算机发展历程\"},\r\n            {id:112, label: \"计算机系统层次结构\"},\r\n            {id:113, label: \"计算机的性能指标\"}\r\n          ]\r\n        },\r\n        {\r\n          id:12,\r\n          label: \"数据的表示和运算\",\r\n          children:[\r\n            {id:121, label: \"数制与编码\", children:[\r\n                {id:1211,label:\"进位计数制及其相互转换\",\r\n                  children:[{id:12111,label:\"进制计数法\"},{id:12112,label:\"不同进制之间的相互转换\"}]},\r\n                {id:1212,label:\"真值和机器数\"},\r\n                {id:1213,label:\"BCD码\"},\r\n                {id:1214,label:\"字符与字符串\",\r\n                  children:[{id:12141,label:\"字符编码ASCII码\"},{id:12142,label:\"汉字的表示和编码\"}]},\r\n                {id:1215,label:\"校验码\",\r\n                  children:[{id:12151,label:\"奇偶校验码\"},{id:12152,label:\"海明(汉明)校验码\"},{id:12153,label:\"循环冗余校验(CRC)码\"}]}]},\r\n            {id:122, label: \"定点数的表示与运算\", children:[\r\n                {id:1221,label:\"定点数的表示\",\r\n                  children:[{id:12211,label:\"无符号数和有符号数\"},{id:12212,label:\"机器数的定点表示\"},{id:12213,label:\"原码、补码、反码、移码\"}]},\r\n                {id:1222,label:\"定点数的运算\",\r\n                  children:[{id:12221,label:\"定点数的移位运算\"},{id:12222,label:\"原码定点加减运算\"},{id:12223,label:\"补码定点加减运算\"}\r\n                            ,{id:12224,label:\"符号扩展\"},{id:12225,label:\"溢出概念及判别方法\"},{id:12226,label:\"定点数乘法运算\"},{id:12227,label:\"定点数除法运算\"}]},\r\n                {id:1223,label:\"强制类型转换\",\r\n                  children:[{id:12231,label:\"有符号数与无符号数的转换\"},{id:12232,label:\"不同字长整数间的转换\"}]},\r\n                {id:1224,label:\"数据的存储和排列\",\r\n                  children:[{id:12241,label:\"大端小端存储\"},{id:12242,label:\"边界对齐存储\"}]}]},\r\n            {id:123, label: \"浮点数的表示与运算\", children:[\r\n                {id:1231,label:\"浮点数的表示\",\r\n                  children:[{id:12311,label:\"浮点数表示格式\"},{id:12312,label:\"浮点数规格化\"},{id:12313,label:\"IEEE754标准\"},{id:12314,label:\"定点浮点表示区别\"}]},\r\n                {id:1232,label:\"浮点数的加减运算\",\r\n                  children:[{id:12321,label:\"对阶\"},{id:12322,label:\"尾数求和\"},{id:12323,label:\"规格化\"}\r\n                            ,{id:12324,label:\"舍入\"},{id:12325,label:\"溢出判断\"},{id:12326,label:\"C语言浮点数类型转换\"}]},]},\r\n            {id:124, label: \"算术逻辑单元\", children:[\r\n                {id:1241,label:\"串行加法器与并行加法器\",\r\n                  children:[{id:12411,label:\"一位全加器\"},{id:12412,label:\"串行加法器\"},{id:12413,label:\"并行加法器\"}]},\r\n                {id:1242,label:\"算术逻辑单元的功能和结构\"}]}\r\n          ]\r\n        },\r\n        {\r\n          id:13,\r\n          label: \"存储器概述\",\r\n          children:[\r\n            {id:131, label: \"存储器的分类\"},\r\n            {id:132, label: \"存储器的层次化结构\"},\r\n            {id:133, label: \"半导体随机存储器\"},\r\n            {id:134, label: \"主存储器与CPU的连接\"},\r\n            {id:135, label: \"双端口RAM和多模块存储器\"},\r\n            {id:136, label: \"高速缓冲存储器\"},\r\n            {id:137, label: \"虚拟存储器\"}\r\n          ]\r\n        },\r\n        {\r\n          id:14,\r\n          label: \"指令系统\",\r\n          children:[\r\n            {id:141, label: \"指令格式\"},\r\n            {id:142, label: \"指令的寻址方式\"},\r\n            {id:143, label: \"CISC和RISC的基本概念\"}\r\n          ]\r\n        },\r\n        {\r\n          id:15,\r\n          label: \"中央处理器\",\r\n          children:[\r\n            {id:151, label: \"CPU 的功能和基本结构\"},\r\n            {id:152, label: \"指令执行过程\"},\r\n            {id:153, label: \"数据通路的功能和基本结构\"},\r\n            {id:154, label: \"控制器的功能和工作原理\"},\r\n            {id:155, label: \"指令流水线\"}\r\n          ]\r\n        },\r\n        {\r\n          id:16,\r\n          label: \"总线\",\r\n          children:[\r\n            {id:161, label: \"总线概述\"},\r\n            {id:162, label: \"总线仲裁\"},\r\n            {id:163, label: \"总线操作和定时\"},\r\n            {id:164, label: \"总线标准\"}\r\n          ]\r\n        },\r\n        {\r\n          id:17,\r\n          label: \"输入/输出系统\",\r\n          children:[\r\n            {id:171, label: \"I/O系统基本概念\"},\r\n            {id:172, label: \"外部设备\"},\r\n            {id:173, label: \"I/O接口\"},\r\n            {id:174, label: \"I/O方式\"}\r\n          ]\r\n        }\r\n      ]\r\n      }\r\n    },\r\n  methods:{\r\n    handleNodeClick(data){\r\n      // this.sectionId=data.id;\r\n      // console.log(this.sectionId);\r\n      this.parentData.sectionId = data.id;\r\n      this.$emit('node-selected', data.id);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wholeBox{\r\n  width: 230px;\r\n}\r\n\r\n</style>"]}]}