{"remainingRequest":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/page/system/UpdatePassWord.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/page/system/UpdatePassWord.vue","mtime":1675850078000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n    export default {\n        data() {\n            var validateUserId2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入老密码'));\n                } else {\n                    if (this.ruleForm.checkPass !== '') {\n                        this.$refs.ruleForm.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else {\n                    if (this.ruleForm.checkPass !== '') {\n                        this.$refs.ruleForm.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n            var validatePass2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                ruleForm: {\n                    pass: '',\n                    checkPass: '',\n                    oldPassword:'',\n                },\n                rules: {\n                    pass: [\n                        {validator: validatePass, trigger: 'blur'}\n                    ],\n                    checkPass: [\n                        {validator: validatePass2, trigger: 'blur'}\n                    ],\n                    oldPassword:[{\n                        validator: validateUserId2, trigger: 'blur'\n                    }]\n                }\n            };\n        },\n        methods: {\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        let params = {\n                            pwd:this.ruleForm.pass,\n                            oldPassword:this.ruleForm.oldPassword,\n                        }\n                        this.axios.post('/kousi/updatePwd.htm',params)\n                            .then(function (response) {\n                                if(response.data.code==\"0000\"){\n                                   this.$message.success('修改成功');\n                                    this.$router.push('/login');\n                                }else{\n                                   this.$message.success(response.data.description);\n                                }\n                                this.handleReset('formItem');\n                            }.bind(this))\n                            .catch(function (response) {\n                                // this.$Message.error('系统异常');\n                            });\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            }\n        }\n    }\n",{"version":3,"sources":["UpdatePassWord.vue"],"names":[],"mappings":";AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdatePassWord.vue","sourceRoot":"src/components/page/system","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-calendar-user\"></i> 系统管理\n                </el-breadcrumb-item>\n                <el-breadcrumb-item>密码修改</el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n\n        <el-card class=\"box-card\" style=\"margin-right: 50% ;height: 70%\">\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\"\n                     class=\"demo-ruleForm\">\n                <el-form-item label=\"老密码\" prop=\"oldPassword\">\n                    <el-input type=\"password\" v-model=\"ruleForm.oldPassword\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"新密码\" prop=\"pass\">\n                    <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"确认密码\" prop=\"checkPass\">\n                    <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n                    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n                </el-form-item>\n            </el-form>\n        </el-card>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            var validateUserId2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入老密码'));\n                } else {\n                    if (this.ruleForm.checkPass !== '') {\n                        this.$refs.ruleForm.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else {\n                    if (this.ruleForm.checkPass !== '') {\n                        this.$refs.ruleForm.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n            var validatePass2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                ruleForm: {\n                    pass: '',\n                    checkPass: '',\n                    oldPassword:'',\n                },\n                rules: {\n                    pass: [\n                        {validator: validatePass, trigger: 'blur'}\n                    ],\n                    checkPass: [\n                        {validator: validatePass2, trigger: 'blur'}\n                    ],\n                    oldPassword:[{\n                        validator: validateUserId2, trigger: 'blur'\n                    }]\n                }\n            };\n        },\n        methods: {\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        let params = {\n                            pwd:this.ruleForm.pass,\n                            oldPassword:this.ruleForm.oldPassword,\n                        }\n                        this.axios.post('/kousi/updatePwd.htm',params)\n                            .then(function (response) {\n                                if(response.data.code==\"0000\"){\n                                   this.$message.success('修改成功');\n                                    this.$router.push('/login');\n                                }else{\n                                   this.$message.success(response.data.description);\n                                }\n                                this.handleReset('formItem');\n                            }.bind(this))\n                            .catch(function (response) {\n                                // this.$Message.error('系统异常');\n                            });\n                    } else {\n                        return false;\n                    }\n                });\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            }\n        }\n    }\n</script>\n<style scoped>\n\n</style>"]}]}