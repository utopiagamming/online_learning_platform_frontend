{"remainingRequest":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\babel-loader\\lib\\index.js!D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\working\\projectCodes\\automatic-test-paper\\src\\components\\common\\test.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\working\\projectCodes\\automatic-test-paper\\src\\components\\common\\test.vue","mtime":1677227429031},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\working\\projectCodes\\automatic-test-paper\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  props: ['allTitle', 'title'],\n  data() {\n    return {\n      examShow: true,\n      dataList: [],\n      times: '',\n      show: true,\n      minute: '',\n      second: '',\n      hour: ''\n    };\n  },\n  mounted() {\n    if (this.times > 0) {\n      this.hour = Math.floor(this.times / 60 % 24);\n      this.minute = Math.floor(this.times % 60);\n      this.second = Math.floor(this.times / 60 % 60);\n      this.countDowm();\n    }\n  },\n  methods: {\n    // 检查表单\n    checkForm() {\n      let all = [];\n      this.allTitle.map(x => {\n        x.list && x.list.map(y => {\n          all.push({\n            id: y.id,\n            val: y.val\n          });\n        });\n      });\n      this.$emit('sendForm', all);\n    },\n    countDowm() {\n      var self = this;\n      clearInterval(this.promiseTimer);\n      this.promiseTimer = setInterval(function () {\n        if (self.hour === 0) {\n          if (self.minute !== 0 && self.second === 0) {\n            self.second = 59;\n            self.minute -= 1;\n          } else if (self.minute === 0 && self.second === 0) {\n            self.second = 0;\n            self.$emit('countDowmEnd', true);\n            clearInterval(self.promiseTimer);\n          } else {\n            self.second -= 1;\n          }\n        } else {\n          if (self.minute !== 0 && self.second === 0) {\n            self.second = 59;\n            self.minute -= 1;\n          } else if (self.minute === 0 && self.second === 0) {\n            self.hour -= 1;\n            self.minute = 59;\n            self.second = 59;\n          } else {\n            self.second -= 1;\n          }\n        }\n      }, 1000);\n    },\n    formatNum(num) {\n      return num < 10 ? '0' + num : '' + num;\n    }\n  },\n  computed: {\n    hourString() {\n      return this.formatNum(this.hour);\n    },\n    minuteString() {\n      return this.formatNum(this.minute);\n    },\n    secondString() {\n      return this.formatNum(this.second);\n    }\n  },\n  watch: {\n    allTitle: {\n      handler: function (val, oldval) {\n        if (val != oldval) {\n          this.$nextTick(() => {\n            this.dataList = [];\n            this.dataList = this.allTitle;\n          });\n        }\n      },\n      immediate: true,\n      //关键\n      deep: true\n    }\n  },\n  created() {\n    this.times = this.title.examDate;\n    this.show = false;\n  }\n};",{"version":3,"mappings":"AA+DA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IAEA;EACA;EACAC;IACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;QACAC,UACAA;UACAC;YAAAC;YAAAC;UAAA;QACA;MACA;MACA;IACA;IACAC;MACA;MACAC;MACA;QACA;UACA;YACAC;YACAA;UACA;YACAA;YACAA;YACAD;UACA;YACAC;UACA;QACA;UACA;YACAA;YACAA;UACA;YACAA;YACAA;YACAA;UACA;YACAA;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACAC;QACA;UACA;YACA;YACA;UACA;QACA;MACA;MAEAC;MAAA;MACAC;IACA;EACA;EACAC;IACA;IACA;EACA;AACA","names":["props","data","examShow","dataList","times","show","minute","second","hour","mounted","methods","checkForm","x","all","id","val","countDowm","clearInterval","self","formatNum","computed","hourString","minuteString","secondString","watch","allTitle","handler","immediate","deep","created"],"sourceRoot":"src/components/common","sources":["test.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"title-paperName\">\n      <h1 style=\"text-align:center;\">\n        {{title.paperName}}\n      </h1>\n    </div>\n\n    <div class=\"title-userName\" style=\"margin-left: 20%\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <h3>\n            考试人：{{title.userName}}\n          </h3>\n        </el-col>\n        <el-col :span=\"6\">\n          <h3>\n            限时  ：{{title.examDate}} 分钟\n          </h3>\n        </el-col>\n        <el-col :span=\"6\">\n          <h3>\n            考试倒计时：<button v-if=\"!show\"><span>{{hour? hourString+':'+minuteString+':'+secondString : minuteString+':'+secondString}}</span></button>\n          </h3>\n        </el-col>\n\n      </el-row>\n<!--      <br>考试人：{{title.userName}} <br/>-->\n<!--      <br>限时  ：{{title.examDate}} 分钟 <br/>-->\n<!--      <br>考试倒计时：<button v-if=\"!show\"><span>{{hour? hourString+':'+minuteString+':'+secondString : minuteString+':'+secondString}}</span></button>-->\n    </div>\n\n    <div class=\"home\">\n      <el-card class=\"card-box\" v-for=\"item of dataList\" :key=\"item.id\" v-show=\"examShow\">\n        <!-- 单选 1    填空2    主观3 -->\n        <div>\n          <div class=\"type-title\">{{ item.title }}共{{ item.list.length }}题，共{{ item.fraction }}分</div>\n          <div class=\"item-title\" v-for=\"(item2, index2) of item.list\" :key=\"index2\">\n            <div class=\"title\">{{ index2 + 1 }}.{{ item2.titleName }}&nbsp;&nbsp;{{ item2.titleFraction }}分</div>\n            <div class=\"item-box\" v-if=\"item2.type === 1\">\n              <el-radio-group v-model=\"item2.val\">\n                <el-radio :label=\"item2.choice1\"></el-radio>\n                <el-radio :label=\"item2.choice2\"></el-radio>\n                <el-radio :label=\"item2.choice3\"></el-radio>\n                <el-radio :label=\"item2.choice4\"></el-radio>\n              </el-radio-group>\n            </div>\n            <div class=\"item-box\" v-if=\"item2.type === 2\">\n              <el-checkbox-group v-model=\"item2.val\">\n                <el-input type=\"textarea\" :rows=\"6\" placeholder=\"请输入内容\" v-model=\"item2.val\"></el-input>\n              </el-checkbox-group>\n            </div>\n            <div class=\"content-box1\" v-if=\"item.type === 3\">\n              <el-input type=\"textarea\" :rows=\"6\" placeholder=\"请输入内容\" v-model=\"item2.val\"></el-input>\n            </div>\n          </div>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['allTitle', 'title'],\n  data() {\n    return {\n      examShow: true,\n      dataList: [],\n      times:'',\n      show:true,\n      minute: '',\n      second: '',\n      hour:'',\n\n    };\n  },\n  mounted() {\n    if (this.times > 0) {\n      this.hour = Math.floor(( this.times /60) % 24)\n      this.minute = Math.floor((this.times) % 60)\n      this.second = Math.floor((this.times / 60) % 60)\n      this.countDowm()\n    }\n  },\n  methods: {\n    // 检查表单\n    checkForm() {\n      let all = [];\n      this.allTitle.map((x) => {\n        x.list &&\n        x.list.map((y) => {\n          all.push({ id: y.id, val: y.val });\n        });\n      });\n      this.$emit('sendForm', all);\n    },\n    countDowm () {\n      var self = this\n      clearInterval(this.promiseTimer)\n      this.promiseTimer = setInterval(function () {\n        if (self.hour === 0) {\n          if (self.minute !== 0 && self.second === 0) {\n            self.second = 59\n            self.minute -= 1\n          } else if (self.minute === 0 && self.second === 0) {\n            self.second = 0\n            self.$emit('countDowmEnd', true)\n            clearInterval(self.promiseTimer)\n          } else {\n            self.second -= 1\n          }\n        } else {\n          if (self.minute !== 0 && self.second === 0) {\n            self.second = 59\n            self.minute -= 1\n          } else if (self.minute === 0 && self.second === 0) {\n            self.hour -= 1\n            self.minute = 59\n            self.second = 59\n          } else {\n            self.second -= 1\n          }\n        }\n      }, 1000)\n    },\n    formatNum (num) {\n      return num < 10 ? '0' + num : '' + num\n    }\n  },\n  computed:{\n    hourString () {\n      return this.formatNum(this.hour)\n    },\n    minuteString () {\n      return this.formatNum(this.minute)\n    },\n    secondString () {\n      return this.formatNum(this.second)\n    }\n  },\n  watch: {\n    allTitle: {\n      handler: function (val, oldval) {\n        if (val != oldval) {\n          this.$nextTick(() => {\n            this.dataList = [];\n            this.dataList = this.allTitle;\n          });\n        }\n      },\n\n      immediate: true, //关键\n      deep: true\n    }\n  },\n  created() {\n    this.times = this.title.examDate;\n    this.show = false\n  }\n};\n</script>\n\n<style  lang='scss' scoped>\n.home {\n  min-width: 600px;\n  overflow-x: auto;\n}\n\n.card-box {\n  margin: 10px;\n\n  .type-title {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 10px;\n    .item-title {\n      display: flex;\n    }\n  }\n  .title {\n    margin: 10px 0;\n  }\n  .item-box {\n  }\n  .content-box1 {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"]}]}