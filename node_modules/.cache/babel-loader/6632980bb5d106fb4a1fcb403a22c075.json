{"remainingRequest":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/babel-loader/lib/index.js!/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/page/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/src/components/page/Login.vue","mtime":1682757340304},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mirabilite/IdeaProjects/version1/automatic-test-paper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { mapMutations } from 'vuex';\nexport default {\n  data: function () {\n    return {\n      classList: [{\n        classId: 1,\n        className: \"计算机科学与技术1班\"\n      }, {\n        classId: 2,\n        className: \"计算机科学与技术2班\"\n      }, {\n        classId: 3,\n        className: \"软件工程1班\"\n      }, {\n        classId: 4,\n        className: \"软件工程2班\"\n      }, {\n        classId: 5,\n        className: \"信息安全\"\n      }],\n      status: 1,\n      param: {\n        userId: '',\n        password: ''\n      },\n      dialogFormVisible: false,\n      rules: {\n        userId: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      rules1: {\n        userName: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 8,\n          message: '长度在 6 到 8 个字符',\n          trigger: 'blur'\n        }],\n        userId: [{\n          required: true,\n          message: '请输入用户id',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 8,\n          message: '长度在 6 到 8 个字符',\n          trigger: 'blur'\n        }],\n        roleId: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }]\n      },\n      form: {\n        userName: '',\n        userId: '',\n        password: '',\n        delivery: false,\n        confirmPassword: '',\n        roleId: '',\n        classId: ''\n      },\n      formLabelWidth: '100px'\n    };\n  },\n  methods: {\n    ...mapMutations(['storeLogin']),\n    selectType(event) {\n      console.log(event);\n      this.status = event;\n    },\n    registerForm(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          let params = {\n            userId: this.form.userId,\n            password: this.form.password,\n            roleId: this.form.roleId,\n            userName: this.form.userName,\n            confirmPassword: this.form.confirmPassword,\n            classId: this.form.classId\n          };\n          if (this.form.password !== this.form.confirmPassword) {\n            this.$message({\n              message: \"密码不一致\",\n              type: 'error'\n            });\n            return;\n          }\n          axios.post('/zj/login/registerLogin.htm', params).then(response => {\n            if (response.data.code == \"0000\") {\n              this.$message({\n                message: \"注册成功\",\n                type: 'success'\n              });\n              this.$refs[form].resetFields();\n              this.dialogFormVisible = false;\n            } else {\n              this.$message({\n                message: \"注册出错\",\n                type: 'error'\n              });\n              // return false;\n            }\n          });\n        }\n      });\n    },\n\n    resetForm(form) {\n      this.$refs[form].resetFields();\n      this.dialogFormVisible = false;\n    },\n    submitForm() {\n      this.$refs.login.validate(valid => {\n        if (valid) {\n          let params = {\n            userId: this.param.userId,\n            password: this.param.password\n          };\n          axios.post('/zj/login/login.htm', params).then(response => {\n            if (response.data.code == \"0000\") {\n              //生成uuid作为token\n              const uuidv5 = require('uuid/v5');\n              const token = uuidv5('zj', uuidv5.DNS);\n              // 登陆成功 假设这里是后台返回的 token\n              localStorage.setItem('token', response.data.result.token);\n              sessionStorage.setItem('token', response.data.result.token);\n              this.$message.success('登录成功');\n              sessionStorage.setItem('role', JSON.stringify(response.data.result.role));\n              sessionStorage.setItem('ms_username', response.data.result.userName);\n              sessionStorage.setItem('uid', response.data.result.uid);\n              sessionStorage.setItem('userId', response.data.result.userId);\n              var user = this.param.userName;\n              this.userToken = response.data.result.token; //拿到返回数据里的token\n              this.storeLogin({\n                Authorization: this.userToken\n              });\n              this.$router.push('/');\n            } else {\n              this.$message({\n                message: response.data.description,\n                type: 'error'\n              });\n            }\n          }).catch(error => {\n            console.log(error);\n            this.$message({\n              message: \"登录出错\",\n              type: 'error'\n            });\n          });\n        } else {\n          this.$message.error('请输入账号和密码');\n          return false;\n        }\n      });\n    }\n  },\n  created() {\n    this.axios.post('/zj/class/queryList.htm').then(function (response) {\n      this.classList = response.data.result;\n    }.bind(this)).catch(function (error) {\n      console.log(error);\n    });\n  }\n};",{"version":3,"mappings":"AA8EA;AACA;AACA;EACAA;IACA;MACAC,YACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;QACAH;UAAAI;UAAAC;UAAAC;QAAA;QACAL;UAAAG;UAAAC;UAAAC;QAAA;MACA;MACAC;QACAC;UAAAJ;UAAAC;UAAAC;QAAA;QACAL;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAG;UAAAC;UAAAL;UAAAC;QAAA,EACA;QAEAN;UAAAI;UAAAC;UAAAC;QAAA;QACAK;UAAAP;UAAAC;UAAAC;QAAA,GACA;UAAAG;UAAAC;UAAAL;UAAAC;QAAA;QACAM;UAAAR;UAAAC;UAAAC;QAAA;MACA;MACAO;QACAL;QACAR;QACAC;QACAa;QACAH;QACAC;QACAhB;MACA;MACAmB;IAEA;EACA;EACAC;IACA;IACAC;MACAC;MACA;IACA;IACAC;MACA;QACA;UACA;YACAnB;YACAC;YACAW;YACAJ;YACAG;YACAf;UACA;UACA;YACA;cAAAS;cAAAe;YAAA;YACA;UACA;UACAC,kDACAC;YACA;cACA;gBAAAjB;gBAAAe;cAAA;cACA;cACA;YACA;cACA;gBAAAf;gBAAAe;cAAA;cACA;YACA;UACA;QACA;MACA;IACA;;IACAG;MACA;MACA;IACA;IACAC;MACA;QACA;UACA;YACAxB;YACAC;UACA;UACAoB,0CACAC;YACA;cACA;cACA;cACA;cACA;cACAG;cACAC;cACA;cACAA;cACAA;cACAA;cACAA;cACA;cACA;cACA;gBAAAC;cAAA;cACA;YACA;cACA;gBAAAtB;gBAAAe;cAAA;YACA;UACA,GACAQ;YACAV;YACA;cAAAb;cAAAe;YAAA;UACA;QACA;UACA;UACA;QACA;MACA;IACA;EACA;EACAS;IACA,WACAC,gCACAR,KACA;MACA;IACA,aACA,CACAM;MACAV;IACA;EACA;AACA","names":["data","classList","classId","className","status","param","userId","password","dialogFormVisible","rules","required","message","trigger","rules1","userName","min","max","confirmPassword","roleId","form","delivery","formLabelWidth","methods","selectType","console","registerForm","type","axios","then","resetForm","submitForm","localStorage","sessionStorage","Authorization","catch","created","post"],"sourceRoot":"src/components/page","sources":["Login.vue"],"sourcesContent":["<template>\n    <div class=\"login-wrap\">\n      <!--登录框-->\n        <div class=\"ms-login\">\n            <div class=\"ms-title\">在线学习系统</div>\n            <el-form :model=\"param\" :rules=\"rules\" ref=\"login\" label-width=\"0px\" class=\"ms-content\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"param.userId\" placeholder=\"username\">\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-people\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input\n                            type=\"password\"\n                            placeholder=\"password\"\n                            v-model=\"param.password\"\n                            @keyup.enter.native=\"submitForm()\"\n                    >\n                        <el-button slot=\"prepend\" icon=\"el-icon-lx-lock\"></el-button>\n                    </el-input>\n                </el-form-item>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" plain @click=\"submitForm()\">登录</el-button>\n                </div>\n                <div class=\"login-btn\">\n                    <el-button type=\"primary\" plain @click=\"dialogFormVisible = true\">注册</el-button>\n                </div>\n            </el-form>\n        </div>\n\n      <!--注册框-->\n        <el-dialog title=\"用户注册\" :visible.sync=\"dialogFormVisible\" center width=\"25%\" :destroy-on-close=\"true\">\n            <el-form :model=\"form\" :rules=\"rules1\" ref=\"form\">\n                <el-form-item label=\"用户名：\" label-width=\"100px\" prop=\"userName\">\n                    <el-input v-model=\"form.userName\" :label-width=\"formLabelWidth\" placeholder=\"姓名\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录账号：\" label-width=\"100px\" prop=\"userId\">\n                    <el-input v-model=\"form.userId\" :label-width=\"formLabelWidth\" placeholder=\"学号或者教师号\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"登录密码：\" label-width=\"100px\" prop=\"password\">\n                    <el-input type=\"password\" v-model=\"form.password\" :label-width=\"formLabelWidth\" placeholder=\"密码\"\n                              style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"确认密码：\" label-width=\"100px\" prop=\"confirmPassword\">\n                    <el-input type=\"password\" v-model=\"form.confirmPassword\" :label-width=\"formLabelWidth\"\n                              placeholder=\"确认密码\" style=\"width: 200px\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"角色：\" label-width=\"100px\" prop=\"roleId\" >\n                    <el-select v-model=\"form.roleId\" placeholder=\"请选择角色\" :label-width=\"formLabelWidth\"\n                               style=\"width: 200px\" @change=\"selectType\">\n                        <el-option label=\"学生\" :value=0></el-option>\n                        <el-option label=\"老师\" :value=1></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"班级：\" label-width=\"100px\" prop=\"classId\" v-show=\"this.status===0\">\n                    <el-select v-model=\"form.classId\" placeholder=\"请选择班级\" :label-width=\"formLabelWidth\"\n                               style=\"width: 200px\">\n                        <el-option\n                                v-for=\"(item,index) in this.classList\"\n                                :label=\"item.className\"\n                                :value=\"item.classId\"\n                                :key=\"index\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"resetForm('form')\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"registerForm('form')\">注 册</el-button>\n            </div>\n        </el-dialog>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import {mapMutations} from 'vuex';\n    export default {\n        data: function () {\n            return {\n                classList:[\n                  {classId:1,className:\"计算机科学与技术1班\"},\n                  {classId:2,className:\"计算机科学与技术2班\"},\n                  {classId:3,className:\"软件工程1班\"},\n                  {classId:4,className:\"软件工程2班\"},\n                  {classId:5,className:\"信息安全\"}\n                ],\n                status:1,\n                param: {\n                    userId: '',\n                    password: '',\n                },\n                dialogFormVisible: false,\n                rules: {\n                    userId: [{required: true, message: '请输入用户名', trigger: 'blur'}],\n                    password: [{required: true, message: '请输入密码', trigger: 'blur'}],\n                },\n                rules1: {\n                    userName: [{required: true, message: '请输入用户名', trigger: 'blur'}],\n                    password: [{required: true, message: '请输入密码', trigger: 'blur'},\n                        {min: 6, max: 8, message: '长度在 6 到 8 个字符', trigger: 'blur'}\n                    ],\n\n                    userId: [{required: true, message: '请输入用户id', trigger: 'blur'}],\n                    confirmPassword: [{required: true, message: '请再次输入密码', trigger: 'blur'},\n                        {min: 6, max: 8, message: '长度在 6 到 8 个字符', trigger: 'blur'}],\n                  roleId: [{required: true, message: '请选择角色', trigger: 'change'}],\n                },\n                form: {\n                    userName: '',\n                    userId: '',\n                    password: '',\n                    delivery: false,\n                    confirmPassword: '',\n                  roleId: '',\n                    classId:'',\n                },\n                formLabelWidth: '100px'\n\n            };\n        },\n        methods: {\n            ...mapMutations(['storeLogin']),\n            selectType(event){\n                console.log(event)\n                this.status=event;\n            },\n            registerForm(form) {\n                this.$refs[form].validate((valid) => {\n                    if (valid) {\n                        let params = {\n                            userId: this.form.userId,\n                            password: this.form.password,\n                            roleId: this.form.roleId,\n                            userName: this.form.userName,\n                            confirmPassword: this.form.confirmPassword,\n                            classId:this.form.classId\n                        }\n                        if (this.form.password !== this.form.confirmPassword) {\n                            this.$message({message: \"密码不一致\", type: 'error'});\n                            return;\n                        }\n                        axios.post('/zj/login/registerLogin.htm', params)\n                            .then(response => {\n                                if (response.data.code == \"0000\") {\n                                    this.$message({message: \"注册成功\", type: 'success'});\n                                    this.$refs[form].resetFields();\n                                    this.dialogFormVisible = false;\n                                } else {\n                                    this.$message({message: \"注册出错\", type: 'error'});\n                                    // return false;\n                                }\n                            });\n                    }\n                });\n            },\n            resetForm(form) {\n                this.$refs[form].resetFields();\n                this.dialogFormVisible = false;\n            },\n            submitForm() {\n                this.$refs.login.validate(valid => {\n                    if (valid) {\n                        let params = {\n                            userId: this.param.userId,\n                            password: this.param.password\n                        }\n                        axios.post('/zj/login/login.htm', params)\n                            .then(response => {\n                                if (response.data.code == \"0000\") {\n                                    //生成uuid作为token\n                                    const uuidv5 = require('uuid/v5');\n                                    const token = uuidv5('zj', uuidv5.DNS);\n                                    // 登陆成功 假设这里是后台返回的 token\n                                    localStorage.setItem('token', response.data.result.token)\n                                    sessionStorage.setItem('token', response.data.result.token)\n                                    this.$message.success('登录成功');\n                                    sessionStorage.setItem('role', JSON.stringify(response.data.result.role));\n                                    sessionStorage.setItem('ms_username', response.data.result.userName);\n                                    sessionStorage.setItem('uid', response.data.result.uid);\n                                    sessionStorage.setItem('userId', response.data.result.userId);\n                                    var user = this.param.userName;\n                                    this.userToken = response.data.result.token;  //拿到返回数据里的token\n                                    this.storeLogin({Authorization: this.userToken});\n                                    this.$router.push('/')\n                                } else {\n                                    this.$message({message: response.data.description, type: 'error'});\n                                }\n                            })\n                            .catch(error => {\n                                console.log(error)\n                                this.$message({message: \"登录出错\", type: 'error'});\n                            });\n                    } else {\n                        this.$message.error('请输入账号和密码');\n                        return false;\n                    }\n                });\n            },\n        },\n        created() {\n            this.axios\n                .post('/zj/class/queryList.htm')\n                .then(\n                    function (response) {\n                        this.classList = response.data.result;\n                    }.bind(this)\n                )\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n    };\n</script>\n\n<style scoped>\n    .login-wrap {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        background-image: url(../../assets/img/login-bg.jpg);\n        background-size: 100%;\n    }\n\n    .ms-title {\n        width: 100%;\n        line-height: 50px;\n        text-align: center;\n        font-size: 20px;\n        color: #fff;\n        border-bottom: 1px solid #ddd;\n    }\n\n    .ms-login {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: 350px;\n        margin: -190px 0 0 -175px;\n        border-radius: 5px;\n        background: rgba(255, 255, 255, 0.3);\n        overflow: hidden;\n    }\n\n    .ms-content {\n        padding: 30px 30px;\n    }\n\n    .login-btn {\n        text-align: center;\n    }\n\n    .login-btn button {\n        width: 100%;\n        height: 36px;\n        margin-bottom: 10px;\n    }\n\n</style>"]}]}